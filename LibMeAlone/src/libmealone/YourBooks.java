/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package libmealone;

import database.MyDB;
import database.SessionManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Zeus
 */
public class YourBooks extends javax.swing.JFrame {
    private Integer user_id;
    /**
     * Creates new form YourBooks
     */
    public YourBooks() {
        initComponents();
        
        this.user_id = Integer.valueOf(SessionManager.get("id").toString());
        loadRequest();
        loadBorrowed();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        request_table = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        borrow_table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("Your Books");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        request_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Borrow ID", "Book Title", "Book Author", "Date Requested"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        request_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                request_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(request_table);
        if (request_table.getColumnModel().getColumnCount() > 0) {
            request_table.getColumnModel().getColumn(0).setResizable(false);
            request_table.getColumnModel().getColumn(1).setResizable(false);
            request_table.getColumnModel().getColumn(2).setResizable(false);
            request_table.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 440, 310));

        borrow_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Borrow ID", "Book Title", "Book Author", "Date Borrowed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(borrow_table);
        if (borrow_table.getColumnModel().getColumnCount() > 0) {
            borrow_table.getColumnModel().getColumn(0).setResizable(false);
            borrow_table.getColumnModel().getColumn(1).setResizable(false);
            borrow_table.getColumnModel().getColumn(2).setResizable(false);
            borrow_table.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 410, 310));

        jLabel2.setText("Pending Borrows");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel3.setText("Unreturned Books");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, -1, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton1.setText("Close");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void request_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_request_tableMouseClicked
        int row = request_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)request_table.getModel();
        
        Integer bb_id = (Integer)model.getValueAt(row, 0);
        
        // open borrow book with passed ids
        new CancelRequest(bb_id, () -> {
            loadRequest();
            return null;
        }).setVisible(true);
    }//GEN-LAST:event_request_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YourBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YourBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YourBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YourBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YourBooks().setVisible(true);
            }
        });
    }
    
    private void loadRequest() {
        DefaultTableModel model = (DefaultTableModel)request_table.getModel();
        
        while(request_table.getRowCount() > 0) {
            model.removeRow(0);
        }
        
        request_table.removeAll();
        request_table.revalidate();
        request_table.repaint(); 
        
        try {
           Connection conn = MyDB.getConn();
           
            String sql1 = """
                          SELECT *, bb.id as bb_id 
                          FROM borrowed_books bb
                          JOIN books b ON b.id = bb.book_id
                          WHERE user_id = ? AND is_approved = 0 AND is_returned = 0
                          """;
            
            PreparedStatement p1 = conn.prepareStatement(sql1);
            p1.setInt(1, user_id);

            ResultSet rs = p1.executeQuery();
            
            
            while(rs.next()) {
                model.addRow(new Object[]{rs.getInt("bb_id"), rs.getString("name"), rs.getString("author"), rs.getDate("date_borrowed")});
            }
            
            conn.close();
       }
       catch(Exception error) {
           System.out.println(error);
       }
    }
    
    private void loadBorrowed() {
        DefaultTableModel model = (DefaultTableModel)borrow_table.getModel();
        
        while(borrow_table.getRowCount() > 0) {
            model.removeRow(0);
        }
        
        borrow_table.removeAll();
        borrow_table.revalidate();
        borrow_table.repaint(); 
        
        try {
           Connection conn = MyDB.getConn();
           
            String sql1 = """
                          SELECT *, bb.id as bb_id
                          FROM borrowed_books bb
                          JOIN books b ON b.id = bb.book_id
                          WHERE user_id = ? AND is_approved = 1 AND is_returned = 0
                          """;
            
            PreparedStatement p1 = conn.prepareStatement(sql1);
            p1.setInt(1, user_id);

            ResultSet rs = p1.executeQuery();
            
            
            while(rs.next()) {
                model.addRow(new Object[]{rs.getInt("bb_id"), rs.getString("name"), rs.getString("author"), rs.getDate("date_borrowed")});
            }
            
            conn.close();
       }
       catch(Exception error) {
           System.out.println(error);
       }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable borrow_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable request_table;
    // End of variables declaration//GEN-END:variables
}
